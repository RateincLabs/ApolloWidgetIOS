// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.7.2 (swiftlang-5.7.2.135.5 clang-1400.0.29.51)
// swift-module-flags: -target arm64-apple-ios12.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name ApolloWidget
// swift-module-flags-ignorable: -enable-bare-slash-regex
@_exported import ApolloWidget
import Swift
import UIKit
import WebKit
import _Concurrency
import _StringProcessing
import os.log
import os
public protocol ApolloWidgetProtocol : ObjectiveC.NSObjectProtocol {
  func apolloSurveyHasBeenAnswered(status: Swift.Int, message: Swift.String)
  func apolloSurveyHasBeenClosedUsingTheButton(status: Swift.Int, message: Swift.String)
  func apolloSurveyHasbeenDismissed(status: Swift.Int, message: Swift.String)
}
@objc @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class ApolloWidgetSetup : UIKit.UIViewController {
  @_Concurrency.MainActor(unsafe) public init(controller: UIKit.UIViewController, surveyID: Swift.String, apolloDelegate: ApolloWidget.ApolloWidgetProtocol)
  @_Concurrency.MainActor(unsafe) public func getApolloWidgetControllerInstance() -> ApolloWidget.ApolloWidgetController
  @_Concurrency.MainActor(unsafe) public func addExtras(key: Swift.String, value: Swift.String)
  @_Concurrency.MainActor(unsafe) public func addExtrasArray(e: [Swift.String : Swift.String])
  @_Concurrency.MainActor(unsafe) public func removeExtras(key: Swift.String)
  @_Concurrency.MainActor(unsafe) public func run()
  @objc deinit
}
@objc @_Concurrency.MainActor(unsafe) public class ApolloWidgetController : UIKit.UIViewController, WebKit.WKNavigationDelegate {
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewDidLoad()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewDidAppear(_ animated: Swift.Bool)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewDidDisappear(_ animated: Swift.Bool)
  @_Concurrency.MainActor(unsafe) @objc public func webView(_ webView: WebKit.WKWebView, decidePolicyFor navigationAction: WebKit.WKNavigationAction, decisionHandler: @escaping (WebKit.WKNavigationActionPolicy) -> Swift.Void)
  @_Concurrency.MainActor(unsafe) public func setExtras(e: [Swift.String : Swift.String])
  @_Concurrency.MainActor(unsafe) public init(surveyID: Swift.String, awprotocol: ApolloWidget.ApolloWidgetProtocol?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder decoder: Foundation.NSCoder)
  @objc deinit
}
